<?xml version="1.0" encoding="utf-8"?>
<index version="1" name="Sauli's REAPER Bits and bobs" commit="9cbc0a03b852d1b3156993b52a42981225e591d1">
  <category name="NextVariation">
    <reapack name="NextVariation.lua" type="script" desc="Next Variation">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Next Variation\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Sets content of selected audio item to next variation found. Perfect for sound designers working with recordings containing multiple variations in single file. Uses built-in transient detection, which can be configured action "Transient detection sensitivity/threshold: Adjust..."\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Usage:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Add audio file containing multiple sounds into timeline\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Trim first sound variation from the audio item\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Select audio item and run the script\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab It should now contain the second variation in audio file\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab If results are not satisfactory configure the transient detection through action "Transient detection sensitivity/threshold: Adjust..."\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Features:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Supports multiple selected items\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Uses separate tracks for item manipulation, so shouldn't mess with unselected track content\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Loops through item content, if Loop source is enabled\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Preserves item fade information\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Known issues and workaround:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Built-in transient detection is not content aware and therefor you often have to choose between getting false positives or not finding the next variation. False positives are not really a big issue, since you can just run the script again (using keyboard shortcut strongly recommended). Sensitivity 35%, Threshold -24db settings seem to work fine (= a bit too false positive happy, but not missing anything) with most audio content.\sa180\par}
}
]]></description>
      </metadata>
      <version name="1.0" author="Sauli Lehtinen / Demoji" time="2022-03-14T11:29:49Z">
        <source main="main">https://github.com/saul-l/REAPER-Bits-and-bobs/raw/798b5a15a818403636e086e89a84e8061d31e1d6/NextVariation/NextVariation.lua</source>
      </version>
      <version name="1.01" author="Demoji / Sauli" time="2022-03-15T12:34:16Z">
        <source main="main">https://github.com/saul-l/REAPER-Bits-and-bobs/raw/b426d1743618c462a5d3e692ca28245964d954d6/NextVariation/NextVariation.lua</source>
      </version>
      <version name="1.02" author="saul-l / Sauli" time="2024-04-30T21:20:35Z">
        <source main="main">https://github.com/saul-l/REAPER-Bits-and-bobs/raw/db75c820335d9f99b46441dd981fc5bd26f5b465/NextVariation/NextVariation.lua</source>
      </version>
    </reapack>
  </category>
  <category name="RegionNamingTool">
    <reapack name="RegionNamingTool.lua" type="script" desc="Region Naming Tool">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Region naming tool\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Requires Lokasenna's GUI library v2 for Lua. ReaTeam Scripts has it. Use ReaPack to download it from this repo: https://github.com/ReaTeam/ReaScripts/raw/master/index.xml or downloaded directly from here: https://github.com/jalovatt/Lokasenna_GUI After you have installed it you might need to run action Script: Set Lokasenna_GUI v2 library path.lua\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Basic usage: Create regions in reaper Create timeline selection which has the regions inside Run the script Select and/or type words to fields. (For example select PLR, empty field, footstep and type "dirt" into last textbox) press rename-button. All regions inside timeline selection are renamed to specified word combination. (PLR_footstep_dirt in example) Second list box supports multiselection with both control and shift. Items are always processed in order from top to bottom.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Settings: Press global-button. Settings file should open in text editor. textEditorExecutable is path of text editor which opens settings files. notepad.exe is used by default. ListBox1ValuesDefault and listBox2ValuesDefault contain word list of two list boxes in RegionNamingTool UI. These are used when no project settings file is found. projects contains paths to project-specific word lists. First value is project name and second name is path of project word list. project-specific word list is used if project name is found in reaper project path.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Project word list usage example: Project name is "test_project" and path is "C:\\regionNamingToolSettings\\foobar.lua" Current reaper project is C:\\reaper_project\\test_project\\ENE_Megamonster.rpp" RegionNamingTool uses list box values defined in C:\\regionNamingToolSettings\\foobar.lua, because word test_project was found in project path name.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 projects-button opens project word list in text editor. RegionNamingTool-folder contains rnt_example.lua, which can be used as a base for project specific word list\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Additional info: Previously used values are automatically saved inside reaper project file.\par}
}
]]></description>
      </metadata>
      <version name="1.00" author="saul-l / Sauli" time="2024-04-30T22:22:11Z">
        <source file="RegionNamingTool/RegionNamingToolSettings.lua">https://github.com/saul-l/REAPER-Bits-and-bobs/raw/9cbc0a03b852d1b3156993b52a42981225e591d1/RegionNamingTool/RegionNamingTool/RegionNamingToolSettings.lua</source>
        <source file="RegionNamingTool/rnt_example.lua">https://github.com/saul-l/REAPER-Bits-and-bobs/raw/9cbc0a03b852d1b3156993b52a42981225e591d1/RegionNamingTool/RegionNamingTool/rnt_example.lua</source>
        <source main="main">https://github.com/saul-l/REAPER-Bits-and-bobs/raw/9cbc0a03b852d1b3156993b52a42981225e591d1/RegionNamingTool/RegionNamingTool.lua</source>
      </version>
    </reapack>
  </category>
  <category name="SplitAndKeepFadeCurves">
    <reapack name="SplitAndKeepFadeCurves.lua" type="script" desc="Split and Keep Fade Curves">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Split and Keep Fade Curves\par}
}
]]></description>
      </metadata>
      <version name="1.00" author="saul-l / Sauli" time="2024-04-30T22:12:43Z">
        <source main="main">https://github.com/saul-l/REAPER-Bits-and-bobs/raw/adc802bd4aa4c890840d6647ae727aa7f3b29ee8/SplitAndKeepFadeCurves/SplitAndKeepFadeCurves.lua</source>
      </version>
    </reapack>
  </category>
</index>
